<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cookmaster - Home</title>
  </head>
  <header>Cookmaster
    <nav>
    </nav>
  </header>
  <body>
    <div>
      <h1>Nova Receita</h1>
      <div>
        <form method='post' action="/recipes">
          <div>
            <label for="recipeNew">Nome da Receita</label><br />
            <input data-testid="nome-receita" type="text" name="recipeNew" id="recipeNew" />
          </div>
          <div>
            Ingredientes
          </div>
          <div id="ingredientsContainer">
          </div>
          <div>
            <input data-testid="secretList" type="hidden" name="secretList" id="secretList"/>
          </div>
          <div>
            <input data-testid="ingredientes" type="text" name="ingredients" id="insertIngredients"/>
            <button data-testid="adicionar-ingrediente" type="button" id="addIng">Adicionar Ingrediente</button>
          </div>
          <div>
            <label for="howToDo">Modo de preparo</label><br />
            <input data-testid="modo-de-preparo" type="textArea" name="howToDo" id="howToDo" />
          </div>
          <div>
            <button data-testid="postar-receita" type="submit">Salvar Receita</button>
          </div>
      </div>
      <div>
        <% if (result) {%>
          <div>
            <% result.map(recipe => { %>
            <div>
              <p>Receita: <%= recipe.name %></p>
              <p>Autor: <%= recipe.user %></p>
              <a href="/recipes/<%= recipe.id %>">Ver mais</a>
            </div>
            <%})%>
          </div>
        <% } %>
      </div>
    </div>
  </body>
  <script>
    // Gerando a lista de ingredientes
    const ingredientsContainer = document.getElementById('ingredientsContainer');
    const secretListInput = document.getElementById('secretList');
    const ingredientValue = document.getElementById('insertIngredients');
    const insertIngredientButton = document.getElementById('addIng');
    const ingredientUnnordenedList = document.createElement('ul');
    
    // Criando um id para a lista não ordenada
    ingredientUnnordenedList.setAttribute("id", "ingredientsList");
    const ingredients = [];

    const secretListFiller = () => {
      let filler;
      ingredients.map((e) => {
        if (filler) {
          filler = `${filler}, ${e}`;
        } else {
            filler = `${e}`;
        }
        secretListInput.value = filler;
      });
    };

    // Função com recorrencia, foi a primeira que fiz, ficou demais
    const deleteIngredientsList = (id) => {
      const ingredientsUnnordenedList = document.getElementById('ingredientsList');
      if (ingredientsUnnordenedList.childElementCount === 0) {
        ingredientsContainer.removeChild(ingredientsUnnordenedList);
      }
      if (!id) {
        return null;
      }
      if (ingredientsUnnordenedList) {
        const lineToBeDeleted = document.getElementById(`li-${id}`);
        ingredientsUnnordenedList.removeChild(lineToBeDeleted);
      }
      deleteIngredientsList(undefined);
      return null;
    };
    
    const createDeleteButton = (value) => {
      const deleteButton = document.createElement('button');
      deleteButton.innerText = 'Excluir Ingrediente';
      deleteButton.setAttribute("id", `${value}`);
      deleteButton.setAttribute("class", 'deleteBtn');
      deleteButton.setAttribute("type", 'button');
      deleteButton.addEventListener('click', () => {
        const indexToDelete = ingredients.indexOf(deleteButton.id);
        deleteIngredientsList(deleteButton.id);
        ingredients.splice(indexToDelete, 1);
        secretListFiller();
      });
      return deleteButton;
    };

    const selectDeleteButtons = () => {
      const deleteButtons = document.getElementsByClassName('deleteBtn');
      return deleteButtons;
    };

    const createIngredient = (value) => {
      let ingredientRow = document.createElement('li');
      let row = document.createElement('div');
      value.map((e) => {
        ingredientRow.setAttribute('id', `li-${e}`);
        let deleteBtn = createDeleteButton(e);
        row.innerText = e;
        row.appendChild(deleteBtn);
        ingredientRow.appendChild(row);
        ingredientUnnordenedList.appendChild(ingredientRow);
        const list = ingredientUnnordenedList;
        ingredientsContainer.appendChild(list);
      });
    }

    insertIngredientButton.addEventListener('click', () => {
      ingredients.push(ingredientValue.value);
      createIngredient(ingredients);
      ingredientValue.value='';
      secretListFiller();
    });

    window.onload = () => {
      // Execute as funções aqui
    }
  </script>
</html>
