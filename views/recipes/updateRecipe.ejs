<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cookmaster - Edita receita</title>
  </head>

  <body>
    <%- include('../header', {user})%>
    <h1>Editar Receita</h1>
    <form action="/recipes/<%= recipeDetails.id%>" method="POST">
      <label for="nameInput">Nome da Receita</label>
      <input type="text" name="name" id="nameInput" data-testid="nome-receita" value="<%= recipeDetails.name %>"
        required>
      <fieldset>
        <legend>Ingredientes</legend>
        <input type="hidden" name="ingredients" id="ingredients" value="<%= recipeDetails.ingredients %>" />
        <ul id="ingredients_list"></ul>
        <input type="text" name="ingredient" id="ingredient" data-testid="ingredientes">
        <button type="button" id="adicionar-ingrediente" data-testid="adicionar-ingrediente">Adicionar
          Ingrediente</button>
      </fieldset>
      <label for="instructionsInput">Modo de preparo: </label>
      <textarea name="instructions" id="instructionsInput" cols="50" rows="30" data-testid="modo-de-preparo"
        required><%= recipeDetails.instructions %></textarea>
      <button type="button" onclick="window.location.pathname='/'">Voltar</button>
      <button type="submit" data-testid="postar-receita">Salvar Receita</button>
    </form>

  </body>
  <script>
    // Recuperando e tratando valor de ingredients do recipe
    let ingredientList = document.getElementById('ingredients_list');
    let ingredientValue = document.getElementById('ingredient');
    let ingredientsInput = document.getElementById('ingredients');
    let ingredientButton = document.getElementById('adicionar-ingrediente');
    let instructions = document.getElementById('instructionsInput');
    let ingredients = [];

    const deleteBtn = () => {
      const btn = document.createElement('button');
      btn.innerText = 'Excluir Ingrediente';
      btn.type = 'button';
      btn.addEventListener('click', (event) => {
        /*Removendo itens da lista que está
        dois níveis acima */
        const parentElement = event.target.parentNode;
        const grandparentElement = parentElement.parentNode;

        /* selecionando innerText do parentNode, retirando o texto do button
        que também compõe o innerText da li como um todo */
        const parentNodeInnerText = parentElement.innerText.slice(0, -19);

        // filtrando ingredientes excluidos e atualizando input hidden
        ingredients = ingredients.filter((ingredient) => ingredient !== parentNodeInnerText);
        ingredientsInput.value = ingredients.join(',');
        console.log(ingredients, instructions.value)
        return grandparentElement.removeChild(parentElement);
      })

      return btn;

    }

    const createIngredient = (value) => {
      let ingredient = document.createElement('li');
      ingredient.innerHTML = value;

      // inserindo ingredientes e atualizando input hidden
      ingredients.push(value);
      ingredientsInput.value = ingredients.join(',');

      ingredient.appendChild(deleteBtn());
      ingredientList.appendChild(ingredient);
      console.log(ingredients, instructions.value)
      return value = '';
    }

    const createIngredientOnLoad = (value) => {
      let ingredient = document.createElement('li');
      ingredient.innerHTML = value;

      ingredient.appendChild(deleteBtn());
      return ingredientList.appendChild(ingredient);

    }

    // criando itens da lista de ingredients
    const createIngredientItem = (array = []) => {
      const item = array.map((item) => createIngredientOnLoad(item));
      return item;
    }

    window.onload = () => {
      ingredients = ingredientsInput.value.split(',');

      createIngredientItem(ingredients);

      ingredientButton.addEventListener('click', () => createIngredient(ingredientValue.value));

    }
  </script>

</html>
